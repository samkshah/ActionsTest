# Create github workflow file to get issue data

name: Create Incident

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened,edited]
  workflow_dispatch:

jobs:
  getIssueDetails:
    permissions:
      issues: write
      contents: read
    if: github.event.action == 'opened' && github.event.issue.body != '' && github.event.issue.body != null && contains(github.event.issue.labels.*.name, 'Documentation')
    runs-on: ubuntu-latest
    env:
      issueTitle: ${{github.event.title}}
      issueBody: ${{github.event.issue.body}}
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'

      - name: Extract part from issue body
        id: extract_username
        if: ${{ env.issueBody }} contains 'username' && ${{ env.issueBody }} contains '\d{6}'
        run: |
          inc_userName=$(echo $issueBody | tr -d '\n' | tr -d '\r' | grep -oP '(?<=[uU]sername: )\d+' | head -1)
          if [ -z "$inc_userName" ]; then
            echo "No username found in issue body"
            exit 1
          fi
          echo "inc_userName=$inc_userName" >> $GITHUB_OUTPUT

      - name: Echo issueUserName
        run: |
          # print github context
          echo $GITHUB_CONTEXT
          echo "---------------"
          echo "UserName is: ${{steps.extract_username.outputs.inc_userName}}"

      - name: Add issue comments
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ":wave: Extracted XSOAR incident information from original request.\nCreating incident in XSOAR....\
              \nIncident UserName: ${{steps.extract_username.outputs.inc_userName}} \
              \nAdd more details here...."
            })