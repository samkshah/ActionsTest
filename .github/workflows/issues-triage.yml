# This workflow is used to triage issues.
name: Issues-Triage
on:
  issues:
    types: ["opened", "reopened", "assigned"]

jobs:
  new-issue:
    if: |
      (${{github.event.issue.type == 'opened'}} || ${{github.event.issue.type == 'reopened'}}) &&
      ${{github.event.issue.assignees.length == 0}}
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: assignLabel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
          gh issue edit $ISSUE_URL --add-label "triage"
      - name: addComments
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ":wave: This issue is tagged with 'triage' label. It'll be automatically removed when someone is assigned to work on."
            })
  issue-assigned:
    if: github.event.issue.type == 'assigned'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: removeLabel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
          gh issue edit $ISSUE_URL --remove-label "triage"
  issue-unassigned:
    if: |
      github.event.issue.type == 'unassigned' &&
      github.event.issue.assignees.length == 0
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: addLabel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
          gh issue edit $ISSUE_URL --add-label "triage"

  print-context:
      runs-on: ubuntu-latest
      steps:
        - name: Show event context
          env: 
            EVENT_CONTEXT: ${{ toJSON(github.event)}}
          run: echo "$EVENT_CONTEXT"

        - name: Dump GitHub context
          env:
            GITHUB_CONTEXT: ${{ toJSON(github) }}
          run: echo "$GITHUB_CONTEXT"