{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about-cir/","text":"","title":"About CIR"},{"location":"AET/about/","text":"","title":"Adversary Emulation"},{"location":"EDR-EPP/about/","text":"","title":"EPP/EDR"},{"location":"EmailSecurity/about/","text":"","title":"Email Security"},{"location":"References/detection-prioritization/","text":"Cybersecurity Detection Prioritization Standard The Cybersecurity Incident Response Detection Prioritization document captures the rationale and strategy behind the program\u2019s detections. This is done via agent instrumentation and the capture of system, platform, and application logs. This document includes material loss scenarios and compliance standards that prioritize the instrumentation of systems. This document represents the agreed upon and approved standard in which American Airlines\u2019 products are prioritized for detections. The expectation is that information in this document will evolve over time. The Cybersecurity Incident Response team handles updating this document with the adoption of new organizational security standards and policies. Revisions to this document must be clearly communicated in its revision history. Product Prioritization Compliance and Security Posture Product driven detection priorities are dictated by the level at which it would increase our maturity and security posture. This should be interpreted as a hierarchy of needs. At a minimum, we must meet mandated compliance and increases in our security effectiveness are \u201cnice to have\u201d detections. Figure 1: CIRE prioritizes tactically from left to right; mandated compliance to best practices Black Swans There are 4 material loss scenarios that motivate our security and resiliency strategies. In the event of any of these, American stands to lose upwards of $100M within a 6-hour time-frame. These damages encompass wide spread negative media coverage, both domestic and international, as well as massive fines. Efforts to detect the early onset of Black Swans along with compliance are CIR\u2019s top priority. Figure 2: Material loss scenarios (Black Swans) Risk and DR Criticality Product risk is an indicator of how long it would take for American to suffer damages when outages or compromise occurs within a given product. Risk associated with disruption to a product varies depending on the core business function it aligns with. The following lists American\u2019s primary business functions and how long it would take for a production outage to significantly impact operations in order of priority: Flight Operations \u202f-\u202fSystems, if unavailable, would impact flight operations the day of customer travel. Sales \u202f- Systems, if unavailable, within a week would impact the ability of American to generate revenue. Operational Support \u202f- Systems that, if unavailable, for more than 1 week would impact the maintenance, crew scheduling, or planning support for the fleet. Corporate Support \u202f- Systems that, if unavailable, for more than 1 month that would impact corporate support functions such as health, pay, or career. Criticality can be used as a crude temperature gauge to measure the importance of a product to American\u2019s operations. To be clear, its primary function is to communicate the criticality for disaster recovery of the product. Some systems have low criticality while still performing a significant role in other system architectures that are of a higher criticality. Consideration is given to systems that fall under this category, but in general vital and critical systems trump important and discretionary. Figure 3: Product priority based on risk to business from right to left; prioritization based on DR criticality from top to bottom Instrumentation Strategy Endpoint Detection and Response EDR as a detection method is reserved for Linux and Windows operating systems. The EDR service is a form of instrumentation on the host system. Deployed as an agent, EDR monitors running processes/binaries as well as network activity on the host and forwards the information to a centralized aggregation site. There, the events are analyzed for suspicious activity and actionable alerts are generated for the purpose of response. EDR Agents can be deployed on servers, desktops, and within containers. This is our easiest detection strategy to deploy and as such is prioritized over logging strategies. Figure 4: Instrumentation using Endpoint agents Security Analytics Platform The SA platform serves as the CIR security data lake. Security logs, threat intel, asset information, and other data are aggregated in this platform so that analytics strategies can be leveraged to detect suspicious/anomalous behavior in our network. There are two main methods for collecting systems\u2019 logs for this service. Agent Based Log Collection Like Endpoint agent, SA agents are deployed to the host system to collect logs and forward them to the SA platform. The SA agent can be used to filter and transform logs, thus making it versatile when handling logs in various formats as well as forwarding only security relevant logs to the SA platform. However, this is a more involved deployment process over the Endpoint agent and thus takes more planning from CIR. Agents are supported on Windows and Linux operating systems. Deployments are performed on servers, kiosks, and Kubernetes clusters using a sidecar pattern. Figure 5: Log capture using SA agents Remote Logging There are scenarios in which the installation of a logging agent isn\u2019t possible. Given these constraints, systems and applications can be configured to log remotely to the SA platform. This process is the most demanding as it typically involves a logging change on the host operating system, platform, container, or application. These tend to be more strategic efforts that require coordination with the owner of the subject system and CIR to ensure the correct logs are being forwarded to the SA platform in an acceptable format. Figure 6: Logging directly to SA via remote logging Prioritization by Detection Method Ordering Product Prioritization Using the information detailing Product Prioritization, CIR tactically targets systems for instrumentation. To hit the bare minimum, CIR prioritizes compliance and security posture first when deploying detections. Priority follows up the chain as depicted in Figure 7. Figure 7: Our prioritization strategy is built upon each category with those at the bottom being fundamental to those at the top System Logging Levels Within each category, CIR further prioritizes detection based on how quickly detections can be put in place. The tactical speed of instrumenting systems is described in the earlier sections of this process document. Apart from EDR, logging is prioritized by the following categories: Operating System - Large scale impact as the variance in configuration to set up the logging is minimal and well defined as a time-boxed repeatable process Platform/Device - Less uniform in configuration than OS, but still a manageable amount of variance to execute instrumentation quickly with a large detection impact (web server, DB, Firewall, Router, etc.) Container - Little variance in configuration, little impact given AA presence in the cloud Application - High variance in logging configuration, format, and content. These are strictly strategic efforts that require thorough planning form application owners and CIR.","title":"Detection Prioritization"},{"location":"References/detection-prioritization/#cybersecurity-detection-prioritization-standard","text":"The Cybersecurity Incident Response Detection Prioritization document captures the rationale and strategy behind the program\u2019s detections. This is done via agent instrumentation and the capture of system, platform, and application logs. This document includes material loss scenarios and compliance standards that prioritize the instrumentation of systems. This document represents the agreed upon and approved standard in which American Airlines\u2019 products are prioritized for detections. The expectation is that information in this document will evolve over time. The Cybersecurity Incident Response team handles updating this document with the adoption of new organizational security standards and policies. Revisions to this document must be clearly communicated in its revision history.","title":"Cybersecurity Detection Prioritization Standard"},{"location":"References/detection-prioritization/#product-prioritization","text":"","title":"Product Prioritization"},{"location":"References/detection-prioritization/#compliance-and-security-posture","text":"Product driven detection priorities are dictated by the level at which it would increase our maturity and security posture. This should be interpreted as a hierarchy of needs. At a minimum, we must meet mandated compliance and increases in our security effectiveness are \u201cnice to have\u201d detections. Figure 1: CIRE prioritizes tactically from left to right; mandated compliance to best practices","title":"Compliance and Security Posture"},{"location":"References/detection-prioritization/#black-swans","text":"There are 4 material loss scenarios that motivate our security and resiliency strategies. In the event of any of these, American stands to lose upwards of $100M within a 6-hour time-frame. These damages encompass wide spread negative media coverage, both domestic and international, as well as massive fines. Efforts to detect the early onset of Black Swans along with compliance are CIR\u2019s top priority. Figure 2: Material loss scenarios (Black Swans)","title":"Black Swans"},{"location":"References/detection-prioritization/#risk-and-dr-criticality","text":"Product risk is an indicator of how long it would take for American to suffer damages when outages or compromise occurs within a given product. Risk associated with disruption to a product varies depending on the core business function it aligns with. The following lists American\u2019s primary business functions and how long it would take for a production outage to significantly impact operations in order of priority: Flight Operations \u202f-\u202fSystems, if unavailable, would impact flight operations the day of customer travel. Sales \u202f- Systems, if unavailable, within a week would impact the ability of American to generate revenue. Operational Support \u202f- Systems that, if unavailable, for more than 1 week would impact the maintenance, crew scheduling, or planning support for the fleet. Corporate Support \u202f- Systems that, if unavailable, for more than 1 month that would impact corporate support functions such as health, pay, or career. Criticality can be used as a crude temperature gauge to measure the importance of a product to American\u2019s operations. To be clear, its primary function is to communicate the criticality for disaster recovery of the product. Some systems have low criticality while still performing a significant role in other system architectures that are of a higher criticality. Consideration is given to systems that fall under this category, but in general vital and critical systems trump important and discretionary. Figure 3: Product priority based on risk to business from right to left; prioritization based on DR criticality from top to bottom","title":"Risk and DR Criticality"},{"location":"References/detection-prioritization/#instrumentation-strategy","text":"","title":"Instrumentation Strategy"},{"location":"References/detection-prioritization/#endpoint-detection-and-response","text":"EDR as a detection method is reserved for Linux and Windows operating systems. The EDR service is a form of instrumentation on the host system. Deployed as an agent, EDR monitors running processes/binaries as well as network activity on the host and forwards the information to a centralized aggregation site. There, the events are analyzed for suspicious activity and actionable alerts are generated for the purpose of response. EDR Agents can be deployed on servers, desktops, and within containers. This is our easiest detection strategy to deploy and as such is prioritized over logging strategies. Figure 4: Instrumentation using Endpoint agents","title":"Endpoint Detection and Response"},{"location":"References/detection-prioritization/#security-analytics-platform","text":"The SA platform serves as the CIR security data lake. Security logs, threat intel, asset information, and other data are aggregated in this platform so that analytics strategies can be leveraged to detect suspicious/anomalous behavior in our network. There are two main methods for collecting systems\u2019 logs for this service.","title":"Security Analytics Platform"},{"location":"References/detection-prioritization/#agent-based-log-collection","text":"Like Endpoint agent, SA agents are deployed to the host system to collect logs and forward them to the SA platform. The SA agent can be used to filter and transform logs, thus making it versatile when handling logs in various formats as well as forwarding only security relevant logs to the SA platform. However, this is a more involved deployment process over the Endpoint agent and thus takes more planning from CIR. Agents are supported on Windows and Linux operating systems. Deployments are performed on servers, kiosks, and Kubernetes clusters using a sidecar pattern. Figure 5: Log capture using SA agents","title":"Agent Based Log Collection"},{"location":"References/detection-prioritization/#remote-logging","text":"There are scenarios in which the installation of a logging agent isn\u2019t possible. Given these constraints, systems and applications can be configured to log remotely to the SA platform. This process is the most demanding as it typically involves a logging change on the host operating system, platform, container, or application. These tend to be more strategic efforts that require coordination with the owner of the subject system and CIR to ensure the correct logs are being forwarded to the SA platform in an acceptable format. Figure 6: Logging directly to SA via remote logging","title":"Remote Logging"},{"location":"References/detection-prioritization/#prioritization-by-detection-method","text":"","title":"Prioritization by Detection Method"},{"location":"References/detection-prioritization/#ordering-product-prioritization","text":"Using the information detailing Product Prioritization, CIR tactically targets systems for instrumentation. To hit the bare minimum, CIR prioritizes compliance and security posture first when deploying detections. Priority follows up the chain as depicted in Figure 7. Figure 7: Our prioritization strategy is built upon each category with those at the bottom being fundamental to those at the top","title":"Ordering Product Prioritization"},{"location":"References/detection-prioritization/#system-logging-levels","text":"Within each category, CIR further prioritizes detection based on how quickly detections can be put in place. The tactical speed of instrumenting systems is described in the earlier sections of this process document. Apart from EDR, logging is prioritized by the following categories: Operating System - Large scale impact as the variance in configuration to set up the logging is minimal and well defined as a time-boxed repeatable process Platform/Device - Less uniform in configuration than OS, but still a manageable amount of variance to execute instrumentation quickly with a large detection impact (web server, DB, Firewall, Router, etc.) Container - Little variance in configuration, little impact given AA presence in the cloud Application - High variance in logging configuration, format, and content. These are strictly strategic efforts that require thorough planning form application owners and CIR.","title":"System Logging Levels"},{"location":"References/faq/","text":"","title":"FAQs"},{"location":"SOAR/about/","text":"","title":"SOAR"},{"location":"SecAnalytics/log-examples/","text":"Examples of logs This page provides few examples of various log types and content within those logs User Authentication Logs Authentication logs have various categories, such as users logging into web apps, databases, etc. or applications logging into web services. Following shows few examples of what good logs should look like. Failed Authentication Below is a sample log from loyalty login service. May 19 04:00:07 10.186.108.76 {\"timeStamp\":\"2021-05-19T11:00:00.961Z\",\"application\":\"aa-ct-loyalty-login-service-prod\",\"requestType\":\"refresh_token\",\"status\":\"FAILED\",\"clientId\":\"mobile\",\"advantageNumber\":\"ABC123\",\"context\":{\"Device-Id\":\"7110BE37-1FBD-4F86-A8DF-xxxxxxxxxx\",\"User-Agent\":\"iPhone/2021.05 iPhone12,1|14.5.1|414|896|2.00|AmericanAirlines\",\"X-Cid\":\"\",\"True-Client-IP\":\"111.111.111.111\",\"X-Clientid\":\"mobile\"},\"errorDescription\":\"Refresh token expired\"} This shows all four components we normally need for effective security analytics. who is the actor? This explains various aspects of user or account entities, such as account number, username, user-agent, ip address, etc. IP Address must be true client IP for us to make any effective analytics \"True-Client-IP\":\"111.111.111.111\" \"advantageNumber\":\"ABC123\" \"User-Agent\":\"iPhone/2021.05 iPhone12,1|14.5.1|414|896|2.00|AmericanAirlines\" what action is being performed and result of that action Action in this log is implicit - user is trying to log into the service or refreshing the existing session. It may also mean that user is not actively performing these action, however the auth token expired and as a result, user was logged out. \"requestType\":\"refresh_token\" \"errorDescription\":\"Refresh token expired\" when did the action take place? This timestamp should be in UTC. If it's in any other timezone, CIRE engineer will review with you during integration process so that we can configure analytics tool accordingly. \"timeStamp\":\"2021-05-19T11:00:00.961Z\" where was the action performed? This is normally application ID or any other application specific information \"application\":\"aa-ct-loyalty-login-service-prod\" Note Applications can also send various application attributes, such as Archer ID or short name, DR category, and Regulatory compliance (e.g. PCI, PII, SOX, etc.). In future, we'll have more thorough guidelines and standard templates that application team can use. More examples coming...","title":"Log Examples"},{"location":"SecAnalytics/log-examples/#examples-of-logs","text":"This page provides few examples of various log types and content within those logs","title":"Examples of logs"},{"location":"SecAnalytics/log-examples/#user-authentication-logs","text":"Authentication logs have various categories, such as users logging into web apps, databases, etc. or applications logging into web services. Following shows few examples of what good logs should look like.","title":"User Authentication Logs"},{"location":"SecAnalytics/log-examples/#failed-authentication","text":"Below is a sample log from loyalty login service. May 19 04:00:07 10.186.108.76 {\"timeStamp\":\"2021-05-19T11:00:00.961Z\",\"application\":\"aa-ct-loyalty-login-service-prod\",\"requestType\":\"refresh_token\",\"status\":\"FAILED\",\"clientId\":\"mobile\",\"advantageNumber\":\"ABC123\",\"context\":{\"Device-Id\":\"7110BE37-1FBD-4F86-A8DF-xxxxxxxxxx\",\"User-Agent\":\"iPhone/2021.05 iPhone12,1|14.5.1|414|896|2.00|AmericanAirlines\",\"X-Cid\":\"\",\"True-Client-IP\":\"111.111.111.111\",\"X-Clientid\":\"mobile\"},\"errorDescription\":\"Refresh token expired\"} This shows all four components we normally need for effective security analytics. who is the actor? This explains various aspects of user or account entities, such as account number, username, user-agent, ip address, etc. IP Address must be true client IP for us to make any effective analytics \"True-Client-IP\":\"111.111.111.111\" \"advantageNumber\":\"ABC123\" \"User-Agent\":\"iPhone/2021.05 iPhone12,1|14.5.1|414|896|2.00|AmericanAirlines\" what action is being performed and result of that action Action in this log is implicit - user is trying to log into the service or refreshing the existing session. It may also mean that user is not actively performing these action, however the auth token expired and as a result, user was logged out. \"requestType\":\"refresh_token\" \"errorDescription\":\"Refresh token expired\" when did the action take place? This timestamp should be in UTC. If it's in any other timezone, CIRE engineer will review with you during integration process so that we can configure analytics tool accordingly. \"timeStamp\":\"2021-05-19T11:00:00.961Z\" where was the action performed? This is normally application ID or any other application specific information \"application\":\"aa-ct-loyalty-login-service-prod\" Note Applications can also send various application attributes, such as Archer ID or short name, DR category, and Regulatory compliance (e.g. PCI, PII, SOX, etc.). In future, we'll have more thorough guidelines and standard templates that application team can use.","title":"Failed Authentication"},{"location":"SecAnalytics/log-examples/#more-examples-coming","text":"","title":"More examples coming..."},{"location":"SecAnalytics/log-integration-patterns/","text":"Patterns This page explains high level common patterns for logs collection. \ud83d\udcdd Note: There might be special circumstances where none of the below patterns are applicable or practical. In those scenarios, CIRE engineer will review best way to collect logs with application SMEs. Conceptual Through NiFi LTU - Most Common Pattern Using this self-service pattern, origin systems or applications send logs to the Log Transport Utility (LTU, powered by NiFi ) in each data-center. Application teams can consult the CIRE team on filtering non-security logs from their data pipeline and transforming data to acceptable formats using various pattern matching techniques in LTU. After we have relevant logs in LTU, CIRE team forwards those logs to Securonix On-Prem events collectors - commonly within the same data-center. Directly to Securonix Collector - Least Common Pattern In few situations where applications cannot send logs to LTU because of high events per second (EPS), CIRE recommends this service provider managed pattern. This is to be leverage by exception. By doing this, we are losing flexibility of maintaining parsing, filtering, and takes control away from application teams to manage their own data. Cloud to Cloud integrations - Most Common for Cloud Apps This pattern is recommended for cloud services logs, such as Azure Kubernetes, Key Vault audit logs, or cloud platform audit logs. This type of integration can be done via various methods depending upon where the application is hosted and what are the capabilities supported by the hosting provider or application vendor. Examples From Azure services, such as Azure Functions, App Services, Key Vault, etc. These logs can be forwarded to CIRE managed Log Analytics Workspace in Azure. We are then querying these records via API call from Security Analytics Platform. Here's the log analytics workspace configuration: Subscription: aa-cstrm-prod-spoke Resource Group: cstrm-p-eaus-cir-securityanalytics-rg Azure Log Analytics Workspace: cstrm-p-eaus-cir-securityanalytics-la Example showing pattern for Azure activity logs When we cannot use CIRE workspace In some situations, you may already have your own workspace and want us to use that instead of sending logs to above workspace. In this case, we should have further discussion to make sure we can understand requirements. If we select this option, application team will need to provide DATA.READ access to below service principle. We use this service principle to configure API client/secret so that Security Analytics Platform can pull in those logs. Security Analytics Service Principle: aa-cstrm-p-zeaus-securityanalytics-sp Example showing pattern for Orion Data Lake logs using application workspace","title":"Log Integration Patterns"},{"location":"SecAnalytics/log-integration-patterns/#patterns","text":"This page explains high level common patterns for logs collection. \ud83d\udcdd Note: There might be special circumstances where none of the below patterns are applicable or practical. In those scenarios, CIRE engineer will review best way to collect logs with application SMEs.","title":"Patterns"},{"location":"SecAnalytics/log-integration-patterns/#conceptual","text":"","title":"Conceptual"},{"location":"SecAnalytics/log-integration-patterns/#through-nifi-ltu-most-common-pattern","text":"Using this self-service pattern, origin systems or applications send logs to the Log Transport Utility (LTU, powered by NiFi ) in each data-center. Application teams can consult the CIRE team on filtering non-security logs from their data pipeline and transforming data to acceptable formats using various pattern matching techniques in LTU. After we have relevant logs in LTU, CIRE team forwards those logs to Securonix On-Prem events collectors - commonly within the same data-center.","title":"Through NiFi LTU - Most Common Pattern"},{"location":"SecAnalytics/log-integration-patterns/#directly-to-securonix-collector-least-common-pattern","text":"In few situations where applications cannot send logs to LTU because of high events per second (EPS), CIRE recommends this service provider managed pattern. This is to be leverage by exception. By doing this, we are losing flexibility of maintaining parsing, filtering, and takes control away from application teams to manage their own data.","title":"Directly to Securonix Collector - Least Common Pattern"},{"location":"SecAnalytics/log-integration-patterns/#cloud-to-cloud-integrations-most-common-for-cloud-apps","text":"This pattern is recommended for cloud services logs, such as Azure Kubernetes, Key Vault audit logs, or cloud platform audit logs. This type of integration can be done via various methods depending upon where the application is hosted and what are the capabilities supported by the hosting provider or application vendor.","title":"Cloud to Cloud integrations - Most Common for Cloud Apps"},{"location":"SecAnalytics/log-integration-patterns/#examples","text":"From Azure services, such as Azure Functions, App Services, Key Vault, etc. These logs can be forwarded to CIRE managed Log Analytics Workspace in Azure. We are then querying these records via API call from Security Analytics Platform. Here's the log analytics workspace configuration: Subscription: aa-cstrm-prod-spoke Resource Group: cstrm-p-eaus-cir-securityanalytics-rg Azure Log Analytics Workspace: cstrm-p-eaus-cir-securityanalytics-la Example showing pattern for Azure activity logs When we cannot use CIRE workspace In some situations, you may already have your own workspace and want us to use that instead of sending logs to above workspace. In this case, we should have further discussion to make sure we can understand requirements. If we select this option, application team will need to provide DATA.READ access to below service principle. We use this service principle to configure API client/secret so that Security Analytics Platform can pull in those logs. Security Analytics Service Principle: aa-cstrm-p-zeaus-securityanalytics-sp Example showing pattern for Orion Data Lake logs using application workspace","title":"Examples"},{"location":"SecAnalytics/log-types/","text":"Log Types and Content This page provides information about what types of logs should be captured from various systems and applications. Events vs. Alerts A cybersecurity event is an event of interest signifying interaction with our systems, processes, environments, or workflows which can result in positive or negative impact to our organization. An alert is a notification of a malicious cybersecurity event(s), resulting in incident response. Events are informative while Alerts are actionable. Our Security Analytics platform (SA) solution (Securonix) uses various detections and threat models, a sequence of detected activity, to identify policy violations and potential threats. When a violation or potential threat is recognized, the SA platform then ties the event back to the entity from which the violations originated. Log Content At a minimum, logs should contain the following information. Overall content and format may defer for each system, platform, or application. Who : Actor - Who performed the activity, such as user account, service account, email address, full name, user name, or any HR identifiable attribute that helps to understand who performed this activity. Also Unique Device Identifier, Session Identifier, Unique Access Code (UAC), etc. will be required where applicable.\u200b What : Activity - What was the activity and the outcome, such as login attempt with success or failed, protected documents or configurations accessed / deleted / modified / etc.\u200b When : Timestamp - When was the activity performed? This must include date and time. Where : IP address - Origin and destination address. Where the activity originated from and where it was sent are very important in investigations. Additional requirements for PCI / HIPAA applications: Audit Logs Access requests on PCI/HIPAA relevant data set Transactional Security Logs Activities performed on PCI/HIPAA data Example: Deletion and updating records Following logs are also helpful from business facing applications\u200b: \u200bAudit Logs Activities performed on customer entities Example: Changes performed by AA res agents to customer bookings\u200b Transactional Security Logs Customer or employee facing transactional logs Example: PNR bookings, itinerary related information, boarding pass scanning, customer logins to mobile and web apps, etc.\u200b Note Sensitive PCI and PII data such as full payment card numbers, authorization codes, birth dates, etc. must not be logged within security events. Scope and Log Types Operating System Security Logs If applications have 3 tier model, where they have traditional VMs in Data Center(s) or in cloud IaaS environments, following types of audit logs are in scope at a minimum. All these logs must have descriptions, error codes, reason of failures, etc. in as much details as possible. Windows / Unix Audit logs\u200b Login Success / Failures\u200b Privileged Access / Escalation Logs\u200b Remote access logs Activity logs for privileged users\u200b Account level auditing (e.g. Create, Update, Delete) for sensitive accounts\u200b Database / Data Lake Security Logs Audit Logs: Login Success / Failures\u200b Privileged Access / Escalation Logs\u200b SA accounts access and activity\u200b Access logs for critical tables / columns, example: user accessing \u201cPCI or HIPAA sensitive data\u201d in bulk\u200b Account level auditing (e.g. Create, Update, Delete) for database accounts\u200b Transactional Security Logs: Access to sensitive records, such as employee and customer PII data Infrastructure Devices Security Logs Audit Logs Access and activity logs for application/platform owners\u200b Transactional Security Logs: Traffic passing through network devices, such as traffic that was allowed or denied\u200b Cloud Security Logs Cloud Platform Audit Logs All activity performed by developers or application administrators in cloud platform, such as IBM cloud portal or Azure portal\u200b These are CRUD (Create, Read, Update and Delete) records around cloud resources, such as subscriptions, resource groups, virtual machines, keys, global policies, etc. Cloud platform authentication and authorization logs\u200b Privileged escalation at the cloud platform level\u200b Console logins, such as IBM CLI or Azure CLI\u200b Cloud Service Audit Logs These are CRUD records around cloud services, such as functions, key vaults, storage accounts, AKS (Azure Kubernetes Service), IKS (IBM Kubernetes Service), ADX (Azure Data Explorer), etc. SaaS Applications Audit Logs These are CRUD records for applications hosted in external cloud environments, or 3rd party apps, such as o365, Akamai, Outlook, Orion Data lake, etc. Application Security Logs For applications audit logs, following at-a-minimum is in scope. This applies to all applications irrespective of where they are hosted or type of applications. Audit Logs: Application critical errors /audit Logs\u200b Login Success / Failures\u200b Privileged Access / Escalations Logs\u200b Activity logs for privileged users\u200b Security alerts / notifications relevant to applications\u200b Account level auditing (e.g. Create, Update, Delete) for sensitive accounts\u200b Application mis-use logs\u200b Transactional Security Logs: Application consumer connectivity Users or applications connecting to web services or other applications User's actions within the application","title":"Log Types"},{"location":"SecAnalytics/log-types/#log-types-and-content","text":"This page provides information about what types of logs should be captured from various systems and applications.","title":"Log Types and Content"},{"location":"SecAnalytics/log-types/#events-vs-alerts","text":"A cybersecurity event is an event of interest signifying interaction with our systems, processes, environments, or workflows which can result in positive or negative impact to our organization. An alert is a notification of a malicious cybersecurity event(s), resulting in incident response. Events are informative while Alerts are actionable. Our Security Analytics platform (SA) solution (Securonix) uses various detections and threat models, a sequence of detected activity, to identify policy violations and potential threats. When a violation or potential threat is recognized, the SA platform then ties the event back to the entity from which the violations originated.","title":"Events vs. Alerts"},{"location":"SecAnalytics/log-types/#log-content","text":"At a minimum, logs should contain the following information. Overall content and format may defer for each system, platform, or application. Who : Actor - Who performed the activity, such as user account, service account, email address, full name, user name, or any HR identifiable attribute that helps to understand who performed this activity. Also Unique Device Identifier, Session Identifier, Unique Access Code (UAC), etc. will be required where applicable.\u200b What : Activity - What was the activity and the outcome, such as login attempt with success or failed, protected documents or configurations accessed / deleted / modified / etc.\u200b When : Timestamp - When was the activity performed? This must include date and time. Where : IP address - Origin and destination address. Where the activity originated from and where it was sent are very important in investigations. Additional requirements for PCI / HIPAA applications: Audit Logs Access requests on PCI/HIPAA relevant data set Transactional Security Logs Activities performed on PCI/HIPAA data Example: Deletion and updating records Following logs are also helpful from business facing applications\u200b: \u200bAudit Logs Activities performed on customer entities Example: Changes performed by AA res agents to customer bookings\u200b Transactional Security Logs Customer or employee facing transactional logs Example: PNR bookings, itinerary related information, boarding pass scanning, customer logins to mobile and web apps, etc.\u200b Note Sensitive PCI and PII data such as full payment card numbers, authorization codes, birth dates, etc. must not be logged within security events.","title":"Log Content"},{"location":"SecAnalytics/log-types/#scope-and-log-types","text":"","title":"Scope and Log Types"},{"location":"SecAnalytics/log-types/#operating-system-security-logs","text":"If applications have 3 tier model, where they have traditional VMs in Data Center(s) or in cloud IaaS environments, following types of audit logs are in scope at a minimum. All these logs must have descriptions, error codes, reason of failures, etc. in as much details as possible. Windows / Unix Audit logs\u200b Login Success / Failures\u200b Privileged Access / Escalation Logs\u200b Remote access logs Activity logs for privileged users\u200b Account level auditing (e.g. Create, Update, Delete) for sensitive accounts\u200b","title":"Operating System Security Logs"},{"location":"SecAnalytics/log-types/#database-data-lake-security-logs","text":"Audit Logs: Login Success / Failures\u200b Privileged Access / Escalation Logs\u200b SA accounts access and activity\u200b Access logs for critical tables / columns, example: user accessing \u201cPCI or HIPAA sensitive data\u201d in bulk\u200b Account level auditing (e.g. Create, Update, Delete) for database accounts\u200b Transactional Security Logs: Access to sensitive records, such as employee and customer PII data","title":"Database / Data Lake Security Logs"},{"location":"SecAnalytics/log-types/#infrastructure-devices-security-logs","text":"Audit Logs Access and activity logs for application/platform owners\u200b Transactional Security Logs: Traffic passing through network devices, such as traffic that was allowed or denied\u200b","title":"Infrastructure Devices Security Logs"},{"location":"SecAnalytics/log-types/#cloud-security-logs","text":"Cloud Platform Audit Logs All activity performed by developers or application administrators in cloud platform, such as IBM cloud portal or Azure portal\u200b These are CRUD (Create, Read, Update and Delete) records around cloud resources, such as subscriptions, resource groups, virtual machines, keys, global policies, etc. Cloud platform authentication and authorization logs\u200b Privileged escalation at the cloud platform level\u200b Console logins, such as IBM CLI or Azure CLI\u200b Cloud Service Audit Logs These are CRUD records around cloud services, such as functions, key vaults, storage accounts, AKS (Azure Kubernetes Service), IKS (IBM Kubernetes Service), ADX (Azure Data Explorer), etc. SaaS Applications Audit Logs These are CRUD records for applications hosted in external cloud environments, or 3rd party apps, such as o365, Akamai, Outlook, Orion Data lake, etc.","title":"Cloud Security Logs"},{"location":"SecAnalytics/log-types/#application-security-logs","text":"For applications audit logs, following at-a-minimum is in scope. This applies to all applications irrespective of where they are hosted or type of applications. Audit Logs: Application critical errors /audit Logs\u200b Login Success / Failures\u200b Privileged Access / Escalations Logs\u200b Activity logs for privileged users\u200b Security alerts / notifications relevant to applications\u200b Account level auditing (e.g. Create, Update, Delete) for sensitive accounts\u200b Application mis-use logs\u200b Transactional Security Logs: Application consumer connectivity Users or applications connecting to web services or other applications User's actions within the application","title":"Application Security Logs"},{"location":"SecAnalytics/logging-standards/","text":"AA Security Logging Standards \ud83d\udcdd Note: Cyber Risk and Audit Governance team maintains logging policy and standards in Archer. Following information is taken from Archer as is. Detailed Security Log Management Standard --> click here to view in Archer Purpose The Security Log Management Standard identifies requirements for logging security related events, which is a critical data source for the Cyber Incident Response (CIR) Program. The Security Analytics Platform specifically supports the program by providing analysis of events to determine alerts that indicate an incident has occurred. Scope All IT Information systems that store, process, or transmit American Airlines\u2019 data, owned, managed or administered by American or by a third party on behalf of American Airlines. General Requirements System/Information Owners will coordinate with CIR to design and document appropriate security events and are responsible for ensuring events are delivered to the Security Analytics Platform. To ensure proper configuration, maintenance, and reporting; CIR must understand the following for each log source. System Owners must notify CIR of any changes to their system which would alter event data. The Business or System Owner and the Application Name within that system. The technical contact responsible for maintaining the system. The hostname, the Grey (or management) IP, and the Color (or servicing) IP. The Operating System, DBMS and Application names and versions sending the events and the vendor providing the software (derived from the System Architecture Document). The type of events (OS, Application, DB or some combination) and the schema The location of the server (most often what data center) the log source(s) reside in. All new log sources must be recorded in the Enterprise asset management system. Event Generation Following are basic guidelines and minimum requirements about what systems should send security events to analytics platform, and provides high level categories of those events. Basic Guidelines Logging will be enabled for all American information systems Logs will not capture regulated information All system clocks and times will be synced to an AA approved time source and will be configured per the below requirements Only designated central time server(s) will receive time signals from external sources and time signals from external sources will be based on American approved time sources If more than one designated time server is utilized, the time servers will peer with one another to keep accurate time Systems will receive time information only from designated central time server(s) Any modification of system times/logging settings will be restricted to the system administrator Requirements All of the following systems must send security events to the SA platform Vital and Critical DR systems All systems that have regulatory requirements to log security events Internet facing systems Any systems determined by Cybersecurity to have a risk level that requires logging security events. Logs will capture the following activities, at a minimum. \ud83d\udcdd Note: Detailed categorizations of below event types are in \"log types\" documentation here --> click here Successful and unsuccessful authentication attempts to systems or devices Actions taken by individuals with root or administrative privileges Creation and deletion of new accounts Elevation of access rights Additions, deletions, and modifications to normal or privileged accounts Successful and unsuccessful authentication attempts to access system logs Initialization, stopping, or pausing of system logs Enabling, disabling, and altering of system logs configuration Additions, deletions, and modifications to security/audit log parameters Creation and deletion of system-level objects (e.g., database tables, stored procedures, etc Unauthorized access or modification to data files, system configurations, and rule sets Dropped packets, successful and rejected connections established for firewalls Enabling, disabling, and updating protection status for IDS, IPS and anti-virus software System shutdown and reboot System application errors Application shutdown and restart For each event logged, the following details will be recorded, at a minimum: User ID or User account (If applicable) Date and time stamp Description of the activity performed Event ID or event type Reason for logging event (e.g., access failure / success) IP address and hostname of the source system IP address and hostname of the destination system (where applicable) Source and destination ports (where applicable) Resource accessed (URL/GET request/actual IP address accessed - as opposed to the address of the server generating the event - where applicable) List of commands executed by user or system Associated daemon process or operating system service Referring page (in case of HTTP access) Type of browser used (in case of HTTP access) Other information or detail that may help to recreate a sequence of events to provide information for debugging or testing purposes \u26a0 Warning: Administrator and operator logs will be enabled for all critical information systems (as defined by the Information Classification Policy), particularly for the information systems involved in processing of PCI and PII data. Information Classification Policy --> Click here to view in Archer","title":"Logging Standards"},{"location":"SecAnalytics/logging-standards/#aa-security-logging-standards","text":"\ud83d\udcdd Note: Cyber Risk and Audit Governance team maintains logging policy and standards in Archer. Following information is taken from Archer as is. Detailed Security Log Management Standard --> click here to view in Archer","title":"AA Security Logging Standards"},{"location":"SecAnalytics/logging-standards/#purpose","text":"The Security Log Management Standard identifies requirements for logging security related events, which is a critical data source for the Cyber Incident Response (CIR) Program. The Security Analytics Platform specifically supports the program by providing analysis of events to determine alerts that indicate an incident has occurred.","title":"Purpose"},{"location":"SecAnalytics/logging-standards/#scope","text":"All IT Information systems that store, process, or transmit American Airlines\u2019 data, owned, managed or administered by American or by a third party on behalf of American Airlines.","title":"Scope"},{"location":"SecAnalytics/logging-standards/#general-requirements","text":"System/Information Owners will coordinate with CIR to design and document appropriate security events and are responsible for ensuring events are delivered to the Security Analytics Platform. To ensure proper configuration, maintenance, and reporting; CIR must understand the following for each log source. System Owners must notify CIR of any changes to their system which would alter event data. The Business or System Owner and the Application Name within that system. The technical contact responsible for maintaining the system. The hostname, the Grey (or management) IP, and the Color (or servicing) IP. The Operating System, DBMS and Application names and versions sending the events and the vendor providing the software (derived from the System Architecture Document). The type of events (OS, Application, DB or some combination) and the schema The location of the server (most often what data center) the log source(s) reside in. All new log sources must be recorded in the Enterprise asset management system.","title":"General Requirements"},{"location":"SecAnalytics/logging-standards/#event-generation","text":"Following are basic guidelines and minimum requirements about what systems should send security events to analytics platform, and provides high level categories of those events.","title":"Event Generation"},{"location":"SecAnalytics/logging-standards/#basic-guidelines","text":"Logging will be enabled for all American information systems Logs will not capture regulated information All system clocks and times will be synced to an AA approved time source and will be configured per the below requirements Only designated central time server(s) will receive time signals from external sources and time signals from external sources will be based on American approved time sources If more than one designated time server is utilized, the time servers will peer with one another to keep accurate time Systems will receive time information only from designated central time server(s) Any modification of system times/logging settings will be restricted to the system administrator","title":"Basic Guidelines"},{"location":"SecAnalytics/logging-standards/#requirements","text":"All of the following systems must send security events to the SA platform Vital and Critical DR systems All systems that have regulatory requirements to log security events Internet facing systems Any systems determined by Cybersecurity to have a risk level that requires logging security events. Logs will capture the following activities, at a minimum. \ud83d\udcdd Note: Detailed categorizations of below event types are in \"log types\" documentation here --> click here Successful and unsuccessful authentication attempts to systems or devices Actions taken by individuals with root or administrative privileges Creation and deletion of new accounts Elevation of access rights Additions, deletions, and modifications to normal or privileged accounts Successful and unsuccessful authentication attempts to access system logs Initialization, stopping, or pausing of system logs Enabling, disabling, and altering of system logs configuration Additions, deletions, and modifications to security/audit log parameters Creation and deletion of system-level objects (e.g., database tables, stored procedures, etc Unauthorized access or modification to data files, system configurations, and rule sets Dropped packets, successful and rejected connections established for firewalls Enabling, disabling, and updating protection status for IDS, IPS and anti-virus software System shutdown and reboot System application errors Application shutdown and restart For each event logged, the following details will be recorded, at a minimum: User ID or User account (If applicable) Date and time stamp Description of the activity performed Event ID or event type Reason for logging event (e.g., access failure / success) IP address and hostname of the source system IP address and hostname of the destination system (where applicable) Source and destination ports (where applicable) Resource accessed (URL/GET request/actual IP address accessed - as opposed to the address of the server generating the event - where applicable) List of commands executed by user or system Associated daemon process or operating system service Referring page (in case of HTTP access) Type of browser used (in case of HTTP access) Other information or detail that may help to recreate a sequence of events to provide information for debugging or testing purposes \u26a0 Warning: Administrator and operator logs will be enabled for all critical information systems (as defined by the Information Classification Policy), particularly for the information systems involved in processing of PCI and PII data. Information Classification Policy --> Click here to view in Archer","title":"Requirements"},{"location":"SecAnalytics/overview/","text":"Overview This section explains overall functionality of \"Security Analytics Platform\" and importance of security events collection Cyber Security Incident Response (CIR) team collects and analyzes security events and alerts from various applications and systems to detect unauthorized usage or mis-use of AA applications, systems or accounts. Logging mechanisms and the ability to track user or system activities are critical in detecting, preventing or minimizing the impact of a data or system compromise. The generation of security audit logs in various environments allow for systematic tracking, alerting, and analysis of security incidents. \"Security Analytics Platform\" normalizes, and correlates such events from multiple applications and systems. Correlated events are then used to detect complex behavior; such as, attempts to access accounts in an unauthorized manner or multiple login failures followed by successful authentication for business critical accounts. Various detection policies in analytics platform are used to identify security incidents and alert CIR analysts, who determine what actions need to be taken to verify whether the system has been compromised and then what actions should be taken to respond to the incident proportionally. Securonix Securonix is our next-gen security analytics platform. This is a SaaS service that provides following functionalities at a high level: Security Information and Events Management Built on big data, Securonix Next-Generation SIEM combines log management, user and entity behavior analytics (UEBA), and security incident response into one, end-to-end security operations platform. It collects massive volumes of data in real-time, uses machine learning algorithms to detect advanced threats, and provides artificial intelligence-based security incident response capabilities for fast remediation User and Entity Behavior Analytics User and Entity Behavior Analytics (UEBA) leverages machine learning and behavior analytics to analyze and correlate interactions between users, systems, applications, IP addresses, and data. Securonix UEBA detects advanced insider threats, cyber threats, fraud, cloud data compromise, and non-compliance. It also provides capability to leverage built-in automated response playbooks and customizable case management work flows to assist with responding to threats quickly, accurately, and efficiently. Securonix UEBA Functionality Overview Following is a conceptual diagram that shows various capabilities into Securonix platform for Anomaly Detection","title":"Overview"},{"location":"SecAnalytics/overview/#overview","text":"This section explains overall functionality of \"Security Analytics Platform\" and importance of security events collection Cyber Security Incident Response (CIR) team collects and analyzes security events and alerts from various applications and systems to detect unauthorized usage or mis-use of AA applications, systems or accounts. Logging mechanisms and the ability to track user or system activities are critical in detecting, preventing or minimizing the impact of a data or system compromise. The generation of security audit logs in various environments allow for systematic tracking, alerting, and analysis of security incidents. \"Security Analytics Platform\" normalizes, and correlates such events from multiple applications and systems. Correlated events are then used to detect complex behavior; such as, attempts to access accounts in an unauthorized manner or multiple login failures followed by successful authentication for business critical accounts. Various detection policies in analytics platform are used to identify security incidents and alert CIR analysts, who determine what actions need to be taken to verify whether the system has been compromised and then what actions should be taken to respond to the incident proportionally.","title":"Overview"},{"location":"SecAnalytics/overview/#securonix","text":"Securonix is our next-gen security analytics platform. This is a SaaS service that provides following functionalities at a high level: Security Information and Events Management Built on big data, Securonix Next-Generation SIEM combines log management, user and entity behavior analytics (UEBA), and security incident response into one, end-to-end security operations platform. It collects massive volumes of data in real-time, uses machine learning algorithms to detect advanced threats, and provides artificial intelligence-based security incident response capabilities for fast remediation User and Entity Behavior Analytics User and Entity Behavior Analytics (UEBA) leverages machine learning and behavior analytics to analyze and correlate interactions between users, systems, applications, IP addresses, and data. Securonix UEBA detects advanced insider threats, cyber threats, fraud, cloud data compromise, and non-compliance. It also provides capability to leverage built-in automated response playbooks and customizable case management work flows to assist with responding to threats quickly, accurately, and efficiently.","title":"Securonix"},{"location":"SecAnalytics/overview/#securonix-ueba-functionality-overview","text":"Following is a conceptual diagram that shows various capabilities into Securonix platform for Anomaly Detection","title":"Securonix UEBA Functionality Overview"},{"location":"SecAnalytics/processes/","text":"Processes and Procedures This document outlines various processes related to logs integration, including how to engage CIRE team Overall logs ingestion into Security Analytics Platform is broken down in two high level processes: Engagement Process - Application team submits initial request to CIRE team Logs Integration Process - During this phase, CIRE team works with app SMEs and other stake holders to understand requirements around parsing and policies creation. Engagement Process Here's the steps to make sure we can successfully onboard security logs to our analytics platform. As we are continuously improving our processes, this particular process might change in future to make it easier to interact with CIRE team directly via CI/CD pipeline. \ud83d\udcdd Note: All incoming requests are prioritized based on a set criteria outlined in this prioritization document . If you have an app that you need to onboard quicker due to any other pressing needs, please reach out to us and we can certainly review your use-case and see if it requires different priority. Step 1. Application SMEs or product owners need to submit engagement request via this engagement form --> Click here to open MS form . Please make sure to select the correct option in dropdown. All log integration requests should use below option. \u26a0 Warning: \"PCI Evidence\" option is only used when you already know that logs are in Security Analytics Platform and you need evidence to meet PCI compliance needs. Step 2. After successful submission, you should see an email confirmation similar to this. This email explains next steps, such as engaging SAE team for onboarding logs to LTU if the pattern requires logs to be in LTU before sending to Security Analytics Platform. \ud83d\udcdd Note: For known integration patterns, please review this document Step 3. After CIRE team prioritize this request, an assigned engineer will reach out to the submitter or application SMEs to start initial conversations about potential security use-case for the logs and also review possible filtering / parsing of logs in either LTU or at application side. Logs Integration Process This page explains overall process to integrate security logs to analytics platform. Overall logs integration process is broken down into three major phases. Below is high level description of each of the phases, including goal and expectations. Various Phases Phase 1: Logs Collection This phase includes logs collection from application / platforms to analytics environment. Identify security logs from source systems - this task is normally performed by application SME. CIRE team can help to review various types of security events, however it is expected that application SME knows how to identify relevant events. Finalize logs collection pattern - this task normally requires discussion with all stakeholders (application SME, CIRE and SAE). Various patterns are documented in Logs Collection Patterns page for additional reference. Send security logs to NiFi LTU (if pattern requires this) or directly to Security Analytics Platform. This task can be performed by any stakeholders (application SME, CIRE engineer or SAE engineer) depending upon integration pattern Filter irrelevant logs, such as health checks or application telemetry information in LTU or at application level before sending logs to Security Analytics Platform. This task can be performed by any stakeholders depending on where the filter logic can be implemented. However, detailed discussion with application SMEs is required so that CIRE engineer can understand log flow. Phase 2: Logs Configuration This phase mainly includes log source configuration within analytics platform. This configuration is primarily managed by CIRE engineer. However, in some situations, CIRE engineer may reach out to application SME to review logs content, to make sure logs are correctly parsed in analytics platform CIRE engineer performs various tasks, such as creates new log source, parses logs (if needed), maps various fields to standard vendor attributes, and schedules log source in the Security Analytics Platform Phase 3: Policies and Alerts Configuration This phase includes policies and threat model configuration in analytics platform so that we can detect malicious behavior and generate alerts so that security analysts can review those and perform appropriate remediation tasks. This configuration is performed by CIRE engineer. CIRE engineer normally creates new policies and threat models, or updates existing configuration to make sure this new log source can generate relevant alerts. \ud83d\udcdd Note: Review this document to understand how CIRE team prioritizes new integration requests --> Detection Prioritization .","title":"Processes and Procedures"},{"location":"SecAnalytics/processes/#processes-and-procedures","text":"This document outlines various processes related to logs integration, including how to engage CIRE team Overall logs ingestion into Security Analytics Platform is broken down in two high level processes: Engagement Process - Application team submits initial request to CIRE team Logs Integration Process - During this phase, CIRE team works with app SMEs and other stake holders to understand requirements around parsing and policies creation.","title":"Processes and Procedures"},{"location":"SecAnalytics/processes/#engagement-process","text":"Here's the steps to make sure we can successfully onboard security logs to our analytics platform. As we are continuously improving our processes, this particular process might change in future to make it easier to interact with CIRE team directly via CI/CD pipeline. \ud83d\udcdd Note: All incoming requests are prioritized based on a set criteria outlined in this prioritization document . If you have an app that you need to onboard quicker due to any other pressing needs, please reach out to us and we can certainly review your use-case and see if it requires different priority. Step 1. Application SMEs or product owners need to submit engagement request via this engagement form --> Click here to open MS form . Please make sure to select the correct option in dropdown. All log integration requests should use below option. \u26a0 Warning: \"PCI Evidence\" option is only used when you already know that logs are in Security Analytics Platform and you need evidence to meet PCI compliance needs. Step 2. After successful submission, you should see an email confirmation similar to this. This email explains next steps, such as engaging SAE team for onboarding logs to LTU if the pattern requires logs to be in LTU before sending to Security Analytics Platform. \ud83d\udcdd Note: For known integration patterns, please review this document Step 3. After CIRE team prioritize this request, an assigned engineer will reach out to the submitter or application SMEs to start initial conversations about potential security use-case for the logs and also review possible filtering / parsing of logs in either LTU or at application side.","title":"Engagement Process"},{"location":"SecAnalytics/processes/#logs-integration-process","text":"This page explains overall process to integrate security logs to analytics platform. Overall logs integration process is broken down into three major phases. Below is high level description of each of the phases, including goal and expectations.","title":"Logs Integration Process"},{"location":"SecAnalytics/processes/#various-phases","text":"Phase 1: Logs Collection This phase includes logs collection from application / platforms to analytics environment. Identify security logs from source systems - this task is normally performed by application SME. CIRE team can help to review various types of security events, however it is expected that application SME knows how to identify relevant events. Finalize logs collection pattern - this task normally requires discussion with all stakeholders (application SME, CIRE and SAE). Various patterns are documented in Logs Collection Patterns page for additional reference. Send security logs to NiFi LTU (if pattern requires this) or directly to Security Analytics Platform. This task can be performed by any stakeholders (application SME, CIRE engineer or SAE engineer) depending upon integration pattern Filter irrelevant logs, such as health checks or application telemetry information in LTU or at application level before sending logs to Security Analytics Platform. This task can be performed by any stakeholders depending on where the filter logic can be implemented. However, detailed discussion with application SMEs is required so that CIRE engineer can understand log flow. Phase 2: Logs Configuration This phase mainly includes log source configuration within analytics platform. This configuration is primarily managed by CIRE engineer. However, in some situations, CIRE engineer may reach out to application SME to review logs content, to make sure logs are correctly parsed in analytics platform CIRE engineer performs various tasks, such as creates new log source, parses logs (if needed), maps various fields to standard vendor attributes, and schedules log source in the Security Analytics Platform Phase 3: Policies and Alerts Configuration This phase includes policies and threat model configuration in analytics platform so that we can detect malicious behavior and generate alerts so that security analysts can review those and perform appropriate remediation tasks. This configuration is performed by CIRE engineer. CIRE engineer normally creates new policies and threat models, or updates existing configuration to make sure this new log source can generate relevant alerts. \ud83d\udcdd Note: Review this document to understand how CIRE team prioritizes new integration requests --> Detection Prioritization .","title":"Various Phases"}]}